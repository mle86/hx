.TH HX "1" "October 2021" "hx 0.24.0" ""
.SH NAME
hx \- log files highlighter
.SH SYNOPSIS
\fBhx\fR [\fIOPTIONS\fR] [\fILOGFILE\fR...]
.SH DESCRIPTION
\fBhx\fR is a log files highlighter.
.P
Its main purpose is to make long log files
with long lines
easier to grasp at a glance
through simple, consistent coloring.
.P
It will never change any of its input
besides adding ANSI color sequences to it
(with two exceptions:
it will add a very visible dot
at the start of every line
for better visual line separation,
and it will add a dashed separator line
once after the stdin input pauses
for better visual separation
between \(lqold\(rq and \(lqnew\(rq lines).
.P
It understands a few more or less commonly-used log entry formats,
most importantly the standard \fBsyslog\fR format.
Apart from that, it can guess some less-defined formats
such as a leading timestamp
or a trailing error source filename.
.P
It is well suited for handling running logs
such as returned by \(lq\fBtail\ -f /var/log/syslog\fR\(rq.
.SH OPTIONS
.TP
.BR --ecma48
Forces the program to output only basic, ECMA-48-compatible ANSI coloring codes.
This will lead to less colorful output
but should increase compatibility
in case your terminal does not support the extended coloring sequences.
.SH OUTPUT
\fBhx\fR makes extensive use of ANSI coloring sequences,
including the \(lq\fBCSI\ 38;5;\fR\fIn\fR\ \fBm\fR\(rq sequence
for extended color selection
and the \(lq\fBCSI\ 38;2;\fR\fIr\fR\fB;\fR\fIg\fR\fB;\fR\fIb\fR\ \fBm\fR\(rq sequence
for RGB true-color selection.
They may not be supported by all terminals currently in use.
Use the \fB--ecma48\fR option
if you want \fBhx\fR to use ECMA-48-compatible ANSI sequences only.
This will lead to less colorful output
but should increase compatibility.
Alternatively, the
.\" LINK-TO HX_COLORS ENVIRONMENT VARIABLE
\fIHX_COLORS\fR environment variable
can be used
to manually set all coloring to compatible sequences.
.P
The default colors are optimized for a black terminal background.
.SS Coloring Rationale
Generally the program tries to identify to the main log message part
and print it in the terminal's \fIdefault color\fR (white).
All other parts of the log message will be colored differently
to visually separate them:
the metadata prefix will be \fIyellow\fR,
additional information at the end will be \fIgrey\fR,
and additional information
between the yellow metadata prefix and the white message
will be \fIyellowish-grey\fR.
.P
The following sections
list typical log line parts
and how they fit into these broader categories.
.SS Metadata Prefix
Most log lines start with metadata.
The program will color all of it \fIyellow\fR.
This includes the
.BR timestamp ,
the
.BR "application name"
and/or
.BR PID ,
the
.BR hostname ,
the
.BR username ,
and the
.BR "log level" .
.SS Informational Prefix
This is log metadata considered non-essential
or additional information
located between the log metadata prefix and the message content,
including
.RB "syslog " "message IDs" ,
.BR "client addresses" " and " "usernames" ,
or
.RB "RFC-5424 " "structured data" .
.
It'll be colored \fIyellowish-grey\fR.
.SS Log Message
The only part which will be printed in the terminal's
\fIstandard\~color\fR (usually \fIwhite\fR),
this is the actual log message content.
Any recognized
.BR "exception class name" " prefix"
or
.BR "error code" " prefix"
will also be \fIbolded\fR.
.SS Informational Suffix
This is data considered non-essential to the log message,
including 
.BR "bracketed suffixes" ,
.RB "error source " "file/lineno" ,
.BR "stack traces" ,
and
.BR "JSON error data" .
.SS Others
.IP - 2
Additionally, all \(lqinformational\(rq sections
may contain HTTP status codes
which will be colored appropriately:
1xx\ Info/\:3xx Redirection\~= \fIyellow\fR,
2xx\ Success\~= \fIgreen\fR,
4xx\ Client Error\~= \fIred\fR,
5xx\ Server Error\~= \fIpink\fR.
.IP - 2
Similar coloring will be applied to Postfix DSN codes.
.IP - 2
JSON object keys will be \fIbolded\fR.
.IP - 2
File basenames will be \fIbolded\fR.
.IP - 2
The syslog prefix \(lqmessage repeated N times: [\(rq
will be colored \fIblue\fR.
.SH HX_COLORS ENVIRONMENT VARIABLE
The \fIHX_COLORS\fR environment variable, if set and non-empty,
is read on start-up for color definitions
which will overwrite the default colors
(described in the
.\" LINK-TO OUTPUT
\(lqOutput\(rq
section above).
.P
The variable supports section\(emcolor assignments
like this: \(lq\fBap=38;5;90\fR\(rq.
This assigns the ANSI color 38;5;90 (dark violet)
to the \fIap\fR section (app name/PID).
.P
Multiple assignments must be separated with colons (\fB:\fR).
Multiple assignments to the same section overwrite earlier assignments.
If the equals sign is not followed by a digit, the trailing part is assumed to be a section name;
for example, \(lq\fBap=hn\fR\(rq assigns the \fIhn\fR (hostname) color to \fIap\fR (app/PID).
The special section name \(lq\fB*\fR\(rq
assigns a color definition
to all sections not previously assigned in the variable.
.SS Valid sections:
.TP
.B SY
The line-start symbol in case of a normal line.
.TP
.B ML
The line-start symbol in case of a meta line (such as \(lqtail\ -f\(rq filename headers).
Also the meta line content.
.TP
.B CL
The line-start symbol in case of a continuation line.
.TP
.B RP
Syslog repeated message wrapper.
.TP
.B FS
Separator line on input read pause.
.TP
.B dt
Date/time.
.TP
.B ap
Application name or process ID (PID).
.TP
.B hn
Source hostname.
.TP
.B ix
Informational message prefix.
.TP
.B in
Informational message suffix.
.TP
.B le
Log levels \fIerror\fR and higher.
.TP
.B lw
Log levels \fIwarning\fR and higher.
.TP
.B ll
All other log levels.
.TP
.B ms
Message content.
.TP
.B er
Error class name or error code.
.TP
.B eq
Error class namespace.
.TP
.B tr
Stack traces
and error source (file/lineno).
.TP
.B st
Exception stacks.
.TP
.B sm
Exception stack single messages (only if more than one).
.TP
.B fl
File basenames and/or line numbers.
.TP
.B fn
Function names (in stack traces).
.TP
.B jw
Top-level JSON enclosure characters ([] or {}).
.TP
.B ke
Keys in key\(emvalue structures such as JSON.
.TP
.B h1
HTTP\ 1xx status codes (Informational).
.TP
.B h2
HTTP\ 2xx status codes (Success).
.TP
.B h3
HTTP\ 3xx status codes (Redirection).
.TP
.B h4
HTTP\ 4xx status codes (Client Error).
.TP
.B h5
HTTP\ 5xx status codes (Server Error).
.TP
.B h6
HTTP\ 4xx status codes considered less important,
such as HTTP\ 404\~Not Found.
.TP
.B *
All sections not previously assigned.
.SS Defaults
By default,
\fBhx\fR produces output
as if it had been given
this \fIHX_COLORS\fR value:
.P
.ad l
.RS 2
\fBSY\fR=33:\:\
\fBCL\fR=38;2;113;97;25:\:\
\fBML\fR=38;2;114;204;204:\:\
\fBFS\fR=32;2:\:\
\fBRP\fR=34:\:\
\fBdt\fR=SY:\:\
\fBhn\fR=SY:\:\
\fBap\fR=SY:\:\
\fBms\fR=0:\:\
\fBll\fR=SY:\:\
\fBlw\fR=38;5;220:\:\
\fBle\fR=38;2;255;145;36:\:\
\fBin\fR=38;5;243:\:\
\fBix\fR=38;2;125;117;83:\:\
\fBtr\fR=in:\:\
\fBst\fR=in:\:\
\fBsm\fR=ms:\:\
\fBeq\fR=ms:\:\
\fBer\fR=1:\:\
\fBfl\fR=1:\:\
\fBfn\fR=1:\:\
\fBjw\fR=1:\:\
\fBke\fR=1:\:\
\fBh1\fR=38;2;202;214;98:\:\
\fBh2\fR=38;2;98;214;113:\:\
\fBh3\fR=h1:\:\
\fBh4\fR=38;2;235;41;41:\:\
\fBh5\fR=38;5;199;1:\:\
\fBh6\fR=38;2;155;72;72
.RE
.ad b
.P
When using the \fB--ecma48\fR option,
\fBhx\fR uses output settings
equivalent to these \fIHX_COLORS\fR settings:
.P
.ad l
.RS 2
\fBSY\fR=33:\:\
\fBCL\fR=33;2:\:\
\fBML\fR=36:\:\
\fBFS\fR=32;2:\:\
\fBRP\fR=34:\:\
\fBdt\fR=SY:\:\
\fBhn\fR=SY:\:\
\fBap\fR=SY:\:\
\fBms\fR=0:\:\
\fBll\fR=33:\:\
\fBlw\fR=33;1:\:\
\fBle\fR=33;1:\:\
\fBin\fR=37;2:\:\
\fBix\fR=in:\:\
\fBtr\fR=in:\:\
\fBst\fR=in:\:\
\fBsm\fR=ms:\:\
\fBeq\fR=ms:\:\
\fBer\fR=1:\:\
\fBfl\fR=1:\:\
\fBfn\fR=1:\:\
\fBjw\fR=1:\:\
\fBke\fR=1:\:\
\fBh1\fR=33:\:\
\fBh2\fR=32:\:\
\fBh3\fR=h1:\:\
\fBh4\fR=31;1:\:\
\fBh5\fR=31;1:\:\
\fBh6\fR=31
.RE
.ad b
.SH HX_SETTINGS ENVIRONMENT VARIABLE
The \fIHX_SETTINGS\fR environment variable,
if set and non-empty,
is read on start-up
to change various run-time settings.
.P
Boolean options can be switched on simply by including their option keyword
and switched off by prefixing them with \(lq\fBno\fR\(rq.
For example, the \fB--ecma48\fR compatibility output mode
is enabled by adding the \(lq\fIecma48\fR\(rq keyword
to the variable
and explicitly disabled
by adding the \(lq\fInoecma48\fR\(rq keyword.
Some options take an optional or required value;
supply it after an equals sign (\fB=\fR).
Option values may be enclosed with doublequotes (\fB\(dq\fR).
This is required for values which contain spaces or doublequotes
(which must be escaped with backslashes).
Multiple option keywords must be separated by one or more spaces.
.SS Supported options:
.TP
.BR ecma48 ", " 48
Enables the compatibility output mode.
Equivalent to the \fB--ecma48\fR command line option.
.br
Default: disabled.
.TP
\fBpausewait\fR[\fB=\fR\fIdelay\fR], \fBpw\fR
Enables printing the separator line once
as soon as the input pauses for at least \fIdelay\fR milliseconds.
(The \fIdelay\fR default is \fB200\fR if missing.)
Has no effect if \fBpausesep\fR is unset.
.br
Default: enabled, 200ms.
.TP
\fBpausesep\fR[=\fIchar\fR], \fBps\fR
Enables printing the separator line once
as soon as the input pauses for several milliseconds.
The line will consist of this \fIchar\fR,
repeated until the terminal line is filled.
(The \fIchar\fR default is \(dq\fB\[u207B]\fR\(dq if missing.)
Has no effect if \fBpausewait\fR is unset.
.TP
\fBlineprefix\fR=\fIsymbol\fR, \fBpx\fR
Enables or disables line prefixes
for all line types at once.
See \fBloglineprefix\fR,
\fBmetalineprefix\fR,
and \fBcontlineprefix\fR below.
.br
Default: enabled, \(dq\[u25CF] \(dq.
.TP
\fBloglineprefix\fR=\fIsymbol\fR, \fBlp\fR
Line prefix string for regular output lines.
(See \fBlineprefix\fR.)
.TP
\fBcontlineprefix\fR=\fIsymbol\fR, \fBcp\fR
Line prefix string for continuation lines.
(See \fBlineprefix\fR.)
.TP
\fBmetalineprefix\fR=\fIsymbol\fR, \fBmp\fR
Line prefix string for meta lines.
(See \fBlineprefix\fR.)
.SS Defaults:
By default,
\fBhx\fR produces output
as if it had been given
this \fIHX_SETTINGS\fR value:
.P
.ad l
.RS 2
\fBpx\fR=\(dq\[u25CF] \(dq \
\fBps\fR=\(dq\[u207B]\(dq \
\fBpw\fR=200 \
\fBno48\fR 
.RE
.ad b
.P
.SH STANDARDS
.ad l
.IR "Control Functions for Character-Imaging I/O Devices" ,
.UR http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-48,%202nd%20Edition,%20August%201979.pdf
Standard ECMA-48
.UE ,
August 1979.
.ad b
.SH SEE ALSO
.BR tail (1),
.BR console_codes (4).
